{"version":3,"file":"static/js/193.9314302c.chunk.js","mappings":"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","sources":["Api/App.js","components/FilmDescription/FilmDescriptionStyled.jsx","components/FilmDescription/FilmDescription.jsx","components/Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMjAxNDhiOTY3NjYyYjdiYzU2YTM5NmRkZGQ3ODViYiIsInN1YiI6IjY0ZWYzZWYxY2FhNTA4MDBjODg2MmU3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cJSzQrz_aIhnK8r3fKa3LJujgVKQRqNnRFAtw0Ori3k',\n  },\n};\n\nexport function getPopularMoviesFromApi() {\n  const URL = `${baseURL}movie/popular`;\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovies(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}`;\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMoviesName(query) {\n  const URL = `${baseURL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  return fetch(URL, options).then(response => response.json());\n}\n// Cast\n\nexport function getMoviesCast(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}/credits`;\n  return fetch(URL, options).then(response => response.json());\n}\n// Reviews\n\nexport function getMoviesReviews(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}/reviews`;\n  return fetch(URL, options).then(response => response.json());\n}\n","import styled from 'styled-components';\n\nexport const GeneralContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2);\n  grid-template-rows: repeat(2);\n  grid-column-gap: 24px;\n  grid-row-gap: 24px;\n  width: 900px;\n  margin-bottom: 40px;\n  img {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    border-radius: 10px;\n    grid-area: 1 / 1 / 2 / 2;\n    width: 290px;\n    height: auto;\n  }\n`;\n\nexport const DescriptionContainer = styled.div`\n  margin-top: 22px;\n  grid-area: 1 / 2 / 2 / 3;\n  h1 {\n    font-weight: 900;\n    font-size: 34px;\n    color: #ffa733;\n  }\n\n  h1,\n  h2,\n  p {\n    padding: 8px;\n    font-family: 'Playfair Display', serif, 'Ubuntu Mono', monospace,\n      'Montserrat', sans-serif;\n  }\n  p {\n    font-weight: 500;\n    font-size: 16px;\n    color: #b3b3b6;\n    padding-top: 0;\n  }\n  h2 {\n    font-weight: 700;\n    font-size: 18px;\n    color: #ffa733;\n    padding-bottom: 0;\n  }\n`;\nexport const Score = styled.div`\n  color: #838383;\n  padding-left: 8px;\n  font-family: 'Playfair Display', serif, 'Ubuntu Mono', monospace, 'Montserrat',\n    sans-serif;\n  padding-bottom: 60px;\n`;\n\nexport const AdditionalInfoWrapper = styled.div`\n  grid-area: 2 / 1 / 3 / 2;\n  h2 {\n    color: #ffa733;\n    padding-bottom: 10px;\n  }\n  h2,\n  p {\n    font-family: 'Playfair Display', serif, 'Ubuntu Mono', monospace,\n      'Montserrat', sans-serif;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nimport NoFotoImg from 'img/four-hundred-four.jpeg';\nimport {\n  DescriptionContainer,\n  AdditionalInfoWrapper,\n  GeneralContainer,\n  Score,\n} from './FilmDescriptionStyled';\n\nconst FilmDescription = ({ movieInfo }) => {\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from || '/';\n\n  const nameOfMovies = movieInfo.title || movieInfo.name;\n  const userScore = parseInt(movieInfo.vote_average * 10);\n  const genres = movieInfo.genres.map(genre => genre.name).join(', ');\n\n  const posterPath = movieInfo.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n    : NoFotoImg;\n\n  return (\n    <GeneralContainer>\n      <div>\n        <NavLink to={backLinkHref}>Go back</NavLink>\n        <img srcSet={posterPath} alt={`Poster for ${nameOfMovies}`} />\n      </div>\n      {movieInfo && (\n        <DescriptionContainer>\n          <h1>{nameOfMovies}</h1>\n          <Score>User Score: {userScore}%</Score>\n          <h2>Overview</h2>\n          <p>{movieInfo.overview}</p>\n          <h2>Genre</h2>\n          <p>{genres}</p>\n        </DescriptionContainer>\n      )}\n      <AdditionalInfoWrapper>\n        <h2>Additional Information</h2>\n        <NavLink to={`/movies/${movieInfo.id}/cast`} state={location.state}>\n          Casts\n        </NavLink>\n        <NavLink to={`/movies/${movieInfo.id}/reviews`} state={location.state}>\n          Reviews\n        </NavLink>\n      </AdditionalInfoWrapper>\n      <Outlet />\n    </GeneralContainer>\n  );\n};\n\nFilmDescription.propTypes = {\n  movieInfo: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default FilmDescription;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovies } from '../../../Api/App';\nimport FilmDescription from 'components/FilmDescription/FilmDescription';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getMovies(movieId).then(data => {\n      setMovieInfo(data);\n    });\n  }, [movieId]);\n\n  return <>{movieInfo && <FilmDescription movieInfo={movieInfo} />}</>;\n};\n\nexport default MovieDetails;\n"],"names":["baseURL","options","method","headers","accept","Authorization","getPopularMoviesFromApi","URL","concat","fetch","then","response","json","getMovies","movie_id","getMoviesName","query","getMoviesCast","getMoviesReviews","GeneralContainer","styled","_templateObject","_taggedTemplateLiteral","DescriptionContainer","_templateObject2","Score","_templateObject3","AdditionalInfoWrapper","_templateObject4","_ref","_location$state","movieInfo","location","useLocation","backLinkHref","state","from","nameOfMovies","title","name","userScore","parseInt","vote_average","genres","map","genre","join","posterPath","poster_path","NoFotoImg","_jsxs","children","_jsx","NavLink","to","srcSet","alt","overview","id","Outlet","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovieInfo","useEffect","data","_Fragment","FilmDescription"],"sourceRoot":""}