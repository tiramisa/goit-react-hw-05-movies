{"version":3,"file":"static/js/775.47c33ffc.chunk.js","mappings":"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","sources":["Api/App.js","components/MovieItem/MovieItemStyled.jsx","components/MovieItem/MovieItem.jsx","components/Pages/Home/Home.jsx","components/Title/Title.jsx"],"sourcesContent":["const baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMjAxNDhiOTY3NjYyYjdiYzU2YTM5NmRkZGQ3ODViYiIsInN1YiI6IjY0ZWYzZWYxY2FhNTA4MDBjODg2MmU3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cJSzQrz_aIhnK8r3fKa3LJujgVKQRqNnRFAtw0Ori3k',\n  },\n};\n\nexport function getPopularMoviesFromApi() {\n  const URL = `${baseURL}movie/popular`;\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovies(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}`;\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMoviesName(query) {\n  const URL = `${baseURL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  return fetch(URL, options).then(response => response.json());\n}\n// Cast\n\nexport function getMoviesCast(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}/credits`;\n  return fetch(URL, options).then(response => response.json());\n}\n// Reviews\n\nexport function getMoviesReviews(movie_id) {\n  const URL = `${baseURL}movie/${movie_id}/reviews`;\n  return fetch(URL, options).then(response => response.json());\n}\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Li = styled.li`\n  width: 225px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const ImgCard = styled.div`\n  height: 339px;\n  width: 226px;\n`;\n","import { NavLink, Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Ul, Li, ImgCard, Img } from './MovieItemStyled';\nimport NoFotoImg from '../../img/four-hundred-four.jpeg';\nimport PropTypes from 'prop-types';\n\nconst MovieItem = ({ arrayOfMovies }) => {\n  const location = useLocation();\n\n  return (\n    <Ul>\n      {arrayOfMovies.map(movie => {\n        let nameOfMovies = null;\n        if (movie.title) {\n          nameOfMovies = movie.title;\n        } else {\n          nameOfMovies = movie.name;\n        }\n        let posterPath = NoFotoImg;\n        if (movie.poster_path) {\n          posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        }\n        return (\n          <Li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImgCard>\n                <Img srcSet={posterPath} />\n              </ImgCard>\n            </Link>\n\n            <div>\n              <NavLink to={`/movies/${movie.id}`}>{nameOfMovies}</NavLink>\n            </div>\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nMovieItem.propTypes = {\n  arrayOfMovies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieItem;\n","import { getPopularMoviesFromApi } from '../../../Api/App';\nimport { useState, useEffect } from 'react';\nimport MovieItem from '../../MovieItem/MovieItem';\nimport Title from 'components/Title/Title';\nimport NoResultsFound from 'img/unknown-cat.png';\n\nconst Home = () => {\n  const [arrayOfMovies, setArrayOfMovies] = useState(null);\n  useEffect(() => {\n    getPopularMoviesFromApi()\n      .then(data => {\n        setArrayOfMovies(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      {!arrayOfMovies && (\n        <div>\n          <p>No results found</p>\n          <img src={NoResultsFound} alt=\"No results found\" />\n        </div>\n      )}\n      {arrayOfMovies && <Title text=\"Top films\" />}\n      {arrayOfMovies && <MovieItem arrayOfMovies={arrayOfMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\n\nconst Title = ({ text }) => {\n  return <h1>{text}</h1>;\n};\n\nTitle.propTypes = { text: PropTypes.string.isRequired };\n\nexport default Title;\n"],"names":["baseURL","options","method","headers","accept","Authorization","getPopularMoviesFromApi","URL","concat","fetch","then","response","json","getMovies","movie_id","getMoviesName","query","getMoviesCast","getMoviesReviews","Ul","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Img","_templateObject3","ImgCard","_templateObject4","_ref","arrayOfMovies","location","useLocation","_jsx","children","map","movie","nameOfMovies","title","name","posterPath","NoFotoImg","poster_path","_jsxs","Link","to","id","state","from","srcSet","NavLink","_useState","useState","_useState2","_slicedToArray","setArrayOfMovies","useEffect","data","results","catch","error","console","_Fragment","src","NoResultsFound","alt","Title","text","MovieItem"],"sourceRoot":""}